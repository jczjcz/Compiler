Terminals unused in grammar

   MUL
   DIV
   MOD
   LCURLY
   RCURLY
   LBRAC
   RBRAC
   VOID
   LE
   LEQ
   GE
   GEQ
   EQ
   NEQ
   AND
   OR
   NOT
   IF
   ELSE
   WHILE
   BREAK
   CONT
   RETURN
   PERIOD


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: Decl
    2         | CompUnit Decl

    3 Decl: ConstDecl
    4     | VarDecl

    5 ConstDecl: CONST INT ConstDefs SEMI

    6 ConstDefs: ConstDef
    7          | ConstDefs ConstDef

    8 ConstDef: IDENT ASSIGN ConstInitVal

    9 ConstInitVal: ConstExp

   10 ConstExp: AddExp

   11 AddExp: MulExp
   12       | AddExp ADD MulExp
   13       | AddExp SUB MulExp

   14 MulExp: UnaryExp

   15 UnaryExp: PrimaryExp

   16 PrimaryExp: NUMBER
   17           | LPAREN Exp RPAREN
   18           | LVal

   19 VarDecl: INT VarDefs SEMI

   20 VarDefs: VarDefs COMMA VarDef
   21        | VarDef

   22 VarDef: IDENT
   23       | IDENT ASSIGN InitVal

   24 InitVal: Exp

   25 Exp: AddExp

   26 LVal: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 12
SUB (259) 13
MUL (260)
DIV (261)
MOD (262)
IDENT (263) 8 22 23 26
LPAREN (264) 17
RPAREN (265) 17
LCURLY (266)
RCURLY (267)
LBRAC (268)
RBRAC (269)
INT (270) 5 19
CONST (271) 5
VOID (272)
LE (273)
LEQ (274)
GE (275)
GEQ (276)
EQ (277)
NEQ (278)
AND (279)
OR (280)
NOT (281)
IF (282)
ELSE (283)
WHILE (284)
BREAK (285)
CONT (286)
RETURN (287)
ASSIGN (288) 8 23
SEMI (289) 5 19
COMMA (290) 20
PERIOD (291)
NUMBER (292) 16


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
CompUnit (39)
    on left: 1 2, on right: 0 2
Decl (40)
    on left: 3 4, on right: 1 2
ConstDecl (41)
    on left: 5, on right: 3
ConstDefs (42)
    on left: 6 7, on right: 5 7
ConstDef (43)
    on left: 8, on right: 6 7
ConstInitVal (44)
    on left: 9, on right: 8
ConstExp (45)
    on left: 10, on right: 9
AddExp (46)
    on left: 11 12 13, on right: 10 12 13 25
MulExp (47)
    on left: 14, on right: 11 12 13
UnaryExp (48)
    on left: 15, on right: 14
PrimaryExp (49)
    on left: 16 17 18, on right: 15
VarDecl (50)
    on left: 19, on right: 4
VarDefs (51)
    on left: 20 21, on right: 19 20
VarDef (52)
    on left: 22 23, on right: 20 21
InitVal (53)
    on left: 24, on right: 23
Exp (54)
    on left: 25, on right: 17 24
LVal (55)
    on left: 26, on right: 18


State 0

    0 $accept: . CompUnit $end

    INT    shift, and go to state 1
    CONST  shift, and go to state 2

    CompUnit   go to state 3
    Decl       go to state 4
    ConstDecl  go to state 5
    VarDecl    go to state 6


State 1

   19 VarDecl: INT . VarDefs SEMI

    IDENT  shift, and go to state 7

    VarDefs  go to state 8
    VarDef   go to state 9


State 2

    5 ConstDecl: CONST . INT ConstDefs SEMI

    INT  shift, and go to state 10


State 3

    0 $accept: CompUnit . $end
    2 CompUnit: CompUnit . Decl

    $end   shift, and go to state 11
    INT    shift, and go to state 1
    CONST  shift, and go to state 2

    Decl       go to state 12
    ConstDecl  go to state 5
    VarDecl    go to state 6


State 4

    1 CompUnit: Decl .

    $default  reduce using rule 1 (CompUnit)


State 5

    3 Decl: ConstDecl .

    $default  reduce using rule 3 (Decl)


State 6

    4 Decl: VarDecl .

    $default  reduce using rule 4 (Decl)


State 7

   22 VarDef: IDENT .
   23       | IDENT . ASSIGN InitVal

    ASSIGN  shift, and go to state 13

    $default  reduce using rule 22 (VarDef)


State 8

   19 VarDecl: INT VarDefs . SEMI
   20 VarDefs: VarDefs . COMMA VarDef

    SEMI   shift, and go to state 14
    COMMA  shift, and go to state 15


State 9

   21 VarDefs: VarDef .

    $default  reduce using rule 21 (VarDefs)


State 10

    5 ConstDecl: CONST INT . ConstDefs SEMI

    IDENT  shift, and go to state 16

    ConstDefs  go to state 17
    ConstDef   go to state 18


State 11

    0 $accept: CompUnit $end .

    $default  accept


State 12

    2 CompUnit: CompUnit Decl .

    $default  reduce using rule 2 (CompUnit)


State 13

   23 VarDef: IDENT ASSIGN . InitVal

    IDENT   shift, and go to state 19
    LPAREN  shift, and go to state 20
    NUMBER  shift, and go to state 21

    AddExp      go to state 22
    MulExp      go to state 23
    UnaryExp    go to state 24
    PrimaryExp  go to state 25
    InitVal     go to state 26
    Exp         go to state 27
    LVal        go to state 28


State 14

   19 VarDecl: INT VarDefs SEMI .

    $default  reduce using rule 19 (VarDecl)


State 15

   20 VarDefs: VarDefs COMMA . VarDef

    IDENT  shift, and go to state 7

    VarDef  go to state 29


State 16

    8 ConstDef: IDENT . ASSIGN ConstInitVal

    ASSIGN  shift, and go to state 30


State 17

    5 ConstDecl: CONST INT ConstDefs . SEMI
    7 ConstDefs: ConstDefs . ConstDef

    IDENT  shift, and go to state 16
    SEMI   shift, and go to state 31

    ConstDef  go to state 32


State 18

    6 ConstDefs: ConstDef .

    $default  reduce using rule 6 (ConstDefs)


State 19

   26 LVal: IDENT .

    $default  reduce using rule 26 (LVal)


State 20

   17 PrimaryExp: LPAREN . Exp RPAREN

    IDENT   shift, and go to state 19
    LPAREN  shift, and go to state 20
    NUMBER  shift, and go to state 21

    AddExp      go to state 22
    MulExp      go to state 23
    UnaryExp    go to state 24
    PrimaryExp  go to state 25
    Exp         go to state 33
    LVal        go to state 28


State 21

   16 PrimaryExp: NUMBER .

    $default  reduce using rule 16 (PrimaryExp)


State 22

   12 AddExp: AddExp . ADD MulExp
   13       | AddExp . SUB MulExp
   25 Exp: AddExp .

    ADD  shift, and go to state 34
    SUB  shift, and go to state 35

    $default  reduce using rule 25 (Exp)


State 23

   11 AddExp: MulExp .

    $default  reduce using rule 11 (AddExp)


State 24

   14 MulExp: UnaryExp .

    $default  reduce using rule 14 (MulExp)


State 25

   15 UnaryExp: PrimaryExp .

    $default  reduce using rule 15 (UnaryExp)


State 26

   23 VarDef: IDENT ASSIGN InitVal .

    $default  reduce using rule 23 (VarDef)


State 27

   24 InitVal: Exp .

    $default  reduce using rule 24 (InitVal)


State 28

   18 PrimaryExp: LVal .

    $default  reduce using rule 18 (PrimaryExp)


State 29

   20 VarDefs: VarDefs COMMA VarDef .

    $default  reduce using rule 20 (VarDefs)


State 30

    8 ConstDef: IDENT ASSIGN . ConstInitVal

    IDENT   shift, and go to state 19
    LPAREN  shift, and go to state 20
    NUMBER  shift, and go to state 21

    ConstInitVal  go to state 36
    ConstExp      go to state 37
    AddExp        go to state 38
    MulExp        go to state 23
    UnaryExp      go to state 24
    PrimaryExp    go to state 25
    LVal          go to state 28


State 31

    5 ConstDecl: CONST INT ConstDefs SEMI .

    $default  reduce using rule 5 (ConstDecl)


State 32

    7 ConstDefs: ConstDefs ConstDef .

    $default  reduce using rule 7 (ConstDefs)


State 33

   17 PrimaryExp: LPAREN Exp . RPAREN

    RPAREN  shift, and go to state 39


State 34

   12 AddExp: AddExp ADD . MulExp

    IDENT   shift, and go to state 19
    LPAREN  shift, and go to state 20
    NUMBER  shift, and go to state 21

    MulExp      go to state 40
    UnaryExp    go to state 24
    PrimaryExp  go to state 25
    LVal        go to state 28


State 35

   13 AddExp: AddExp SUB . MulExp

    IDENT   shift, and go to state 19
    LPAREN  shift, and go to state 20
    NUMBER  shift, and go to state 21

    MulExp      go to state 41
    UnaryExp    go to state 24
    PrimaryExp  go to state 25
    LVal        go to state 28


State 36

    8 ConstDef: IDENT ASSIGN ConstInitVal .

    $default  reduce using rule 8 (ConstDef)


State 37

    9 ConstInitVal: ConstExp .

    $default  reduce using rule 9 (ConstInitVal)


State 38

   10 ConstExp: AddExp .
   12 AddExp: AddExp . ADD MulExp
   13       | AddExp . SUB MulExp

    ADD  shift, and go to state 34
    SUB  shift, and go to state 35

    $default  reduce using rule 10 (ConstExp)


State 39

   17 PrimaryExp: LPAREN Exp RPAREN .

    $default  reduce using rule 17 (PrimaryExp)


State 40

   12 AddExp: AddExp ADD MulExp .

    $default  reduce using rule 12 (AddExp)


State 41

   13 AddExp: AddExp SUB MulExp .

    $default  reduce using rule 13 (AddExp)
